$#include "AUI/AFontDescription.h"

class AFontDescription : public Object
{
    AFontDescription();
    virtual ~AFontDescription();
    int GetSize();
    void SetId(const String& id);
    void SetSize(int size);
};

${

#define TOLUA_DISABLE_tolua_AUILuaAPI_AFontDescription_new00
/* AUI Constructor with context added */
static int tolua_AUILuaAPI_AFontDescription_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"AFontDescription",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  AFontDescription* tolua_ret = (AFontDescription*)  Mtolua_new((AFontDescription)(GetContext(tolua_S)));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"AFontDescription");
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}

#define TOLUA_DISABLE_tolua_AUILuaAPI_AFontDescription_new00_local
/* AUI Constructor with context added */
static int tolua_AUILuaAPI_AFontDescription_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
 !tolua_isusertable(tolua_S,1,"AFontDescription",0,&tolua_err) ||
 !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
 goto tolua_lerror;
 else
#endif
 {
 {
  AFontDescription* tolua_ret = (AFontDescription*)  Mtolua_new((AFontDescription)(GetContext(tolua_S)));
  tolua_pushusertype(tolua_S,(void*)tolua_ret,"AFontDescription");
 tolua_register_gc(tolua_S,lua_gettop(tolua_S));
 }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}

$}


